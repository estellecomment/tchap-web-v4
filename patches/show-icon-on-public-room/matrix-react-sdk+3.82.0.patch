diff --git a/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx b/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx
index 39997e1..5b88a91 100644
--- a/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx
@@ -30,6 +30,9 @@ import TextWithTooltip from "../elements/TextWithTooltip";
 import DMRoomMap from "../../../utils/DMRoomMap";
 import { IOOBData } from "../../../stores/ThreepidInviteStore";
 import TooltipTarget from "../elements/TooltipTarget";
+import TchapRoomUtils from "../../../../../../src/tchap/util/TchapRoomUtils";
+import "../../../../../../res/css/views/avatars/_TchapDecoratedRoomAvatar.pcss";
+import { TchapRoomType } from "../../../../../../src/tchap/@types/tchap";
 
 interface IProps {
     room: Room;
@@ -52,6 +55,11 @@ enum Icon {
     // Note: the names here are used in CSS class names
     None = "NONE", // ... except this one
     Globe = "GLOBE",
+    // :TCHAP: add icons for custom room types
+    Forum = "FORUM",
+    Private = "PRIVATE",
+    External = "EXTERNAL",
+    // end :TCHAP:
     PresenceOnline = "ONLINE",
     PresenceAway = "AWAY",
     PresenceOffline = "OFFLINE",
@@ -62,6 +70,14 @@ function tooltipText(variant: Icon): string | undefined {
     switch (variant) {
         case Icon.Globe:
             return _t("room|header|room_is_public");
+        // :TCHAP: add icons for custom room types
+        case Icon.Forum:
+            return _t("This room is a public forum");
+        case Icon.Private:
+            return _t("This room is private");
+        case Icon.External:
+            return _t("This room is private and open to external users");
+        // end :TCHAP:
         case Icon.PresenceOnline:
             return _t("presence|online");
         case Icon.PresenceAway:
@@ -167,7 +183,23 @@ export default class DecoratedRoomAvatar extends React.PureComponent<IProps, ISt
             }
         } else {
             // Track publicity
-            icon = this.isPublicRoom ? Icon.Globe : Icon.None;
+            //icon = this.isPublicRoom ? Icon.Globe : Icon.None;
+            //:tchap: use custom icons for tchap room types
+            const roomType: TchapRoomType = TchapRoomUtils.getTchapRoomType(this.props.room);
+            switch(roomType) {
+                case TchapRoomType.Forum:
+                    icon = Icon.Forum;
+                    break;
+                case TchapRoomType.Private:
+                    icon = Icon.Private;
+                    break;
+                case TchapRoomType.External:
+                    icon = Icon.External;
+                    break;
+                default:
+                    icon = Icon.None;
+            }
+            //end :tchap:
             if (!this.isWatchingTimeline) {
                 this.props.room.on(RoomEvent.Timeline, this.onRoomTimeline);
                 this.isWatchingTimeline = true;
diff --git a/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx b/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx
index 18cb705..d3272a8 100644
--- a/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx
@@ -22,7 +22,7 @@ import MatrixClientContext from "../../../contexts/MatrixClientContext";
 import { useIsEncrypted } from "../../../hooks/useIsEncrypted";
 import BaseCard, { Group } from "./BaseCard";
 import { _t } from "../../../languageHandler";
-import RoomAvatar from "../avatars/RoomAvatar";
+import DecoratedRoomAvatar from "../avatars/DecoratedRoomAvatar";
 import AccessibleButton, { ButtonEvent, IAccessibleButtonProps } from "../elements/AccessibleButton";
 import defaultDispatcher from "../../../dispatcher/dispatcher";
 import { RightPanelPhases } from "../../../stores/right-panel/RightPanelStorePhases";
@@ -308,7 +308,11 @@ const RoomSummaryCard: React.FC<IProps> = ({ room, permalinkCreator, onClose, on
     const header = (
         <React.Fragment>
             <div className="mx_RoomSummaryCard_avatar" role="presentation">
+                {/** :TCHAP: decorate the avatar with the tchap lock icons
                 <RoomAvatar room={room} size="54px" viewAvatarOnClick />
+                */}
+                <DecoratedRoomAvatar room={room} size="54px" viewAvatarOnClick />
+                {/** remove the extra badge
                 <TextWithTooltip
                     tooltip={isRoomEncrypted ? _t("common|encrypted") : _t("common|unencrypted")}
                     class={classNames("mx_RoomSummaryCard_e2ee", {
@@ -317,6 +321,7 @@ const RoomSummaryCard: React.FC<IProps> = ({ room, permalinkCreator, onClose, on
                         mx_RoomSummaryCard_e2ee_verified: isRoomEncrypted && e2eStatus === E2EStatus.Verified,
                     })}
                 />
+                end :TCHAP: */}
             </div>
 
             <RoomName room={room}>
